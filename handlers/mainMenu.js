const mainMenuKeyboards = require("../keyboards/mainMenu");
const roomsKeyboards = require("../keyboards/rooms");
const utils = require("../utils");
const states = require("../states");
const services = {
    knowledgeBase: require("../services/knowledgeBase"),
    roomsData: require("../services/roomsData"),
    adminAnswers: require("../services/adminAnswers"),
};

module.exports = function setupMainMenuHandlers(bot, userStates) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    bot.onText(/\/start/, async (msg) => {
        const chatId = msg.chat.id;
        const userId = msg.from.id;

        userStates.set(userId, states.MAIN_MENU);

        const welcomeMessage = `üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–∞–∑—É –æ—Ç–¥—ã—Ö–∞ "–ó–æ–ª–æ—Ç—ã–µ –ü–µ—Å–∫–∏" –æ–∑. –¢—É—Ä–≥–æ—è–∫ üå≤üè°

–ú–µ–Ω—è –∑–æ–≤—É—Ç –Æ–ª–∏—è, —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É –≤–∞–º —Å –ø–æ–¥–±–æ—Ä–æ–º —Ä–∞–∑–º–µ—â–µ–Ω–∏—è.

üìç –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ:`;

        await utils.safeSendMessage(bot, chatId, welcomeMessage, {
            parse_mode: "Markdown",
            ...mainMenuKeyboards.getMainMenuKeyboard(),
        });

        if (utils.isAdmin(userId)) {
            await utils.safeSendMessage(
                bot,
                chatId,
                "üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞",
                {
                    parse_mode: "Markdown",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                                    callback_data: "admin_panel",
                                },
                            ],
                        ],
                    },
                },
            );
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é
    bot.onText(/–º–µ–Ω—é|menu/i, async (msg) => {
        const chatId = msg.chat.id;
        const userId = msg.from.id;

        userStates.set(userId, states.MAIN_MENU);
        await utils.safeSendMessage(
            bot,
            chatId,
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            mainMenuKeyboards.getMainMenuKeyboard(),
        );
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    bot.on("callback_query", async (callbackQuery) => {
        const msg = callbackQuery.message;
        const chatId = msg.chat.id;
        const userId = callbackQuery.from.id;
        const data = callbackQuery.data;

        try {
            await bot.answerCallbackQuery(callbackQuery.id);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback:", error.message);
        }

        switch (data) {
            case "important_info":
                await handleImportantInfo(bot, chatId);
                break;

            case "rooms":
                const roomsData = services.roomsData.getRoomsData();
                console.log(
                    "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:",
                    roomsData.length,
                );
                console.log(
                    "–ü–µ—Ä–≤—ã–π –Ω–æ–º–µ—Ä:",
                    JSON.stringify(roomsData[0], null, 2),
                );
                await utils.safeSendMessage(
                    bot,
                    chatId,
                    "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä:",
                    roomsKeyboards.getRoomsKeyboard(roomsData),
                );
                break;

            case "entertainment":
                await handleEntertainment(bot, chatId);
                break;

            case "facilities":
                await handleFacilities(bot, chatId);
                break;

            case "directions":
                await handleDirections(bot, chatId);
                break;

            case "booking":
                userStates.set(userId, states.BOOKING_PROCESS);
                await utils.safeSendMessage(
                    bot,
                    chatId,
                    "–ë—ã–ª–∏ –ª–∏ –≤—ã —É –Ω–∞—Å?",
                    mainMenuKeyboards.getBookingKeyboard(),
                );
                break;

            case "back_to_menu":
                userStates.set(userId, states.MAIN_MENU);
                await utils.safeSendMessage(
                    bot,
                    chatId,
                    "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                    mainMenuKeyboards.getMainMenuKeyboard(),
                );
                break;

            case "booking_yes":
                await handleBookingYes(bot, chatId);
                break;

            case "booking_no":
                await handleBookingNo(bot, chatId);
                break;

            default:
                if (data.startsWith("room_")) {
                    await handleRoomDetails(bot, chatId, data);
                }
                break;
        }
    });

    async function handleImportantInfo(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üìå –ù–∞—à–∞ –±–∞–∑–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä–∞ –≤ –∑–∞–ø–æ–≤–µ–¥–Ω–æ–π –∑–æ–Ω–µ.

üíß –í —Ü–µ–ª—è—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏–∏:
‚Ä¢ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
‚Ä¢ –î—É—à–∞ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ä—É—Å—Å–∫–∏–µ –±–∞–Ω–∏ –Ω–∞ –¥—Ä–æ–≤–∞—Ö (–∫–∞–∫ –¥–ª—è –ø–æ–º—ã–≤–∫–∏, —Ç–∞–∫ –∏ –¥–ª—è –æ—Ç–¥—ã—Ö–∞)
‚Ä¢ –£–¥–æ–±—Å—Ç–≤–∞ –Ω–∞ —É–ª–∏—Ü–µ

üßª –ë–æ–ª—å—à–æ–π –¥–∞—á–Ω—ã–π —Ç—É–∞–ª–µ—Ç –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
üë∂ –î–µ—Ç–∏ –¥–æ 5 –ª–µ—Ç ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ (–µ—Å–ª–∏ –±–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–ø–∞–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–∞)

–ï—Å–ª–∏ —Ç–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç, –¥–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ üòä`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleRooms(bot, chatId) {
        const roomsData = services.roomsData.getRoomsData();

        await utils.safeSendMessage(
            bot,
            chatId,
            `üè† –ö–û–ú–§–û–†–¢
‚Ä¢ –í–∫–ª—é—á–µ–Ω–æ: –ø–æ—Å—Ç–µ–ª—å–Ω–æ–µ –±–µ–ª—å–µ, –ø–æ—Å—É–¥–∞, –∫—É—Ö–Ω—è, –º–∞–Ω–≥–∞–ª
‚Ä¢ –ë–µ–∑ –¥—É—à–∞ –∏ —Ç—É–∞–ª–µ—Ç–∞ –≤ –¥–æ–º–∞—Ö (–µ—Å—Ç—å –±–∞–Ω–∏ –∏ —É–¥–æ–±—Å—Ç–≤–∞ –Ω–∞ —É–ª–∏—Ü–µ)
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã:
  - –î–æ–º ‚Ññ8 (4 —á–µ–ª.) ‚Äî –æ—Ç 9999‚ÇΩ
  - –î–æ–º ‚Ññ9/10 (6 —á–µ–ª.) ‚Äî –æ—Ç 10999‚ÇΩ
  - –î–æ–º ‚Ññ14 (–¥–æ 10+ —á–µ–ª.) ‚Äî –æ—Ç 21999‚ÇΩ

üõèÔ∏è –≠–ö–û–ù–û–ú
‚Ä¢ 4 –∏–ª–∏ 5 –æ–¥–Ω–æ—Å–ø–∞–ª—å–Ω—ã—Ö –∫—Ä–æ–≤–∞—Ç–µ–π
‚Ä¢ –ë–µ–∑ –ø–æ—Å—Ç–µ–ª—å–Ω–æ–≥–æ –±–µ–ª—å—è –∏ –ø–æ—Å—É–¥—ã (–º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –∏–ª–∏ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å: 200‚ÇΩ/–∫–æ–º–ø–ª–µ–∫—Ç)
‚Ä¢ –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ ‚Äî —É—Ç–æ—á–Ω—è–π—Ç–µ –ø–æ –∫–∞–∂–¥–æ–π –∫–æ–º–Ω–∞—Ç–µ
‚Ä¢ –û–±—â–∞—è –∫—É—Ö–Ω—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã:
  - –ö–æ–º–Ω–∞—Ç–∞ –≤ –¥–∞—á–µ 1,2,4,11,13 (4 —á–µ–ª.) ‚Äî –æ—Ç 4999‚ÇΩ
  - –ö–æ–º–Ω–∞—Ç–∞ –≤ –¥–∞—á–µ 6 (5 —á–µ–ª.) ‚Äî –æ—Ç 5499‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:`,
            {
                parse_mode: "Markdown",
                ...roomsKeyboards.getRoomsKeyboard(roomsData),
            },
        );
    }

    async function handleEntertainment(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üèñ –ù–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏:
‚Ä¢ –ö—É–ø–∞–Ω–∏–µ –≤ –æ–∑–µ—Ä–µ
‚Ä¢ –†—É—Å—Å–∫–∞—è –±–∞–Ω—è —Å –ø–∞—Ä–µ–Ω–∏–µ–º –∏ –Ω—ã—Ä—è–Ω–∏–µ–º ‚ùÑÔ∏è
‚Ä¢ –ü—Ä–æ–∫–∞—Ç:
  - –°–∞–ø–±–æ—Ä–¥ ‚Äî 1200‚ÇΩ/—á–∞—Å
  - –ë–∞–π–¥–∞—Ä–∫–∞
  - –õ–æ–¥–∫–∞

üç¢ –ë–æ–ª—å—à–∏–µ –º–∞–Ω–≥–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã —Å –ª–∞–≤–∫–∞–º–∏ –∏ —Å—Ç–æ–ª–∞–º–∏ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å!`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleFacilities(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üçΩÔ∏è –£–¥–æ–±—Å—Ç–≤–∞:
‚Ä¢ –û–±—â–∞—è –∫—É—Ö–Ω—è —Å –≥–∞–∑–æ–≤—ã–º–∏ –ø–ª–∏—Ç–∞–º–∏
‚Ä¢ –ü–∞—Ä–∫–æ–≤–∫–∞:
  - –õ–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ ‚Äî 500‚ÇΩ/—Å—É—Ç–∫–∏
  - –ì–∞–∑–µ–ª—å ‚Äî 1000‚ÇΩ/—Å—É—Ç–∫–∏
‚Ä¢ –ß–∏—Å—Ç–µ–π—à–∞—è —Ä–æ–¥–Ω–∏–∫–æ–≤–∞—è –≤–æ–¥–∞ –∏–∑ –æ–∑–µ—Ä–∞
‚Ä¢ –ó–∞–ø–∞—Å –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥—ã, —Ä–µ—à—ë—Ç–∫–∏ –∏ —É–≥–ª–∏ ‚Äî –±–µ—Ä–∏—Ç–µ —Å —Å–æ–±–æ–π`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleDirections(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: 55.1881079369311, 60.05969764417703.
https://yandex.ru/maps/?ll=60.061851%2C55.187183&mode=routes&rtext=~55.187969%2C60.059069&rtt=auto&ruri=~ymapsbm1%3A%2F%2Forg%3Foid%3D109014041624&source=serp_navig&z=15.3

üöô –í–æ–∑–º–æ–∂–µ–Ω –∑–∞–µ–∑–¥ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ, –ø–∞—Ä–∫–æ–≤–∫–∞ –ø–ª–∞—Ç–Ω–∞—è.
üöñ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä:
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä - —É—Ç–æ—á–Ω—è–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å
‚Ä¢ –ì—Ä—É–ø–ø–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä - —É—Ç–æ—á–Ω—è–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å

–î–ª—è –∑–∞–∫–∞–∑–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ "—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä"`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleBookingYes(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üõèÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:
[–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä](https://your-booking-link.com)

–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä—è–º–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleBookingNo(bot, chatId) {
        await utils.safeSendMessage(
            bot,
            chatId,
            `üìå –ù–∞—à–∞ –±–∞–∑–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä–∞ –≤ –∑–∞–ø–æ–≤–µ–¥–Ω–æ–π –∑–æ–Ω–µ.

üíß –í —Ü–µ–ª—è—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏–∏:
‚Ä¢ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
‚Ä¢ –î—É—à–∞ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ä—É—Å—Å–∫–∏–µ –±–∞–Ω–∏ –Ω–∞ –¥—Ä–æ–≤–∞—Ö (–∫–∞–∫ –¥–ª—è –ø–æ–º—ã–≤–∫–∏, —Ç–∞–∫ –∏ –¥–ª—è –æ—Ç–¥—ã—Ö–∞)
‚Ä¢ –£–¥–æ–±—Å—Ç–≤–∞ –Ω–∞ —É–ª–∏—Ü–µ

üßª –ë–æ–ª—å—à–æ–π –¥–∞—á–Ω—ã–π —Ç—É–∞–ª–µ—Ç –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
üë∂ –î–µ—Ç–∏ –¥–æ 5 –ª–µ—Ç ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ (–µ—Å–ª–∏ –±–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–ø–∞–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–∞)

–ï—Å–ª–∏ —Ç–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é:
[–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä](https://your-booking-link.com)

–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä—è–º–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞!`,
            {
                parse_mode: "Markdown",
                ...mainMenuKeyboards.getBackToMenuKeyboard(),
            },
        );
    }

    async function handleRoomDetails(bot, chatId, data) {
        const roomIndex = parseInt(data.split("_")[1]);
        const roomsData = services.roomsData.getRoomsData();
        const room = roomsData[roomIndex];

        if (room) {
            console.log(`üì∏ –ü–æ–∫–∞–∑ –Ω–æ–º–µ—Ä–∞ ${room.ID || roomIndex}:`, room);

            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
            let roomInfo = `üè† ${room.–ù–∞–∑–≤–∞–Ω–∏–µ || "–ù–æ–º–µ—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"}\n\n`;
            if (room.–û–ø–∏—Å–∞–Ω–∏–µ) roomInfo += `üìù ${room.–û–ø–∏—Å–∞–Ω–∏–µ}\n\n`;
            if (room.–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
                roomInfo += `üë• –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${room.–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å} —á–µ–ª.\n`;
            if (room.–¶–µ–Ω–∞) roomInfo += `üí∞ –¶–µ–Ω–∞: –æ—Ç ${room.–¶–µ–Ω–∞}‚ÇΩ\n`;
            if (room.–¢–∏–ø) roomInfo += `üè∑Ô∏è –¢–∏–ø: ${room.–¢–∏–ø}\n`;
            if (room.–£–¥–æ–±—Å—Ç–≤–∞) roomInfo += `üõèÔ∏è –£–¥–æ–±—Å—Ç–≤–∞: ${room.–£–¥–æ–±—Å—Ç–≤–∞}\n`;
            if (room.–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
                roomInfo += `‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${room.–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ}\n`;

            // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            let photos = room.photos || [];
            if (photos.length === 0) {
                // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ ID –Ω–æ–º–µ—Ä–∞
                const roomPhotos = services.roomsData.getRoomPhotos(room.ID);
                if (roomPhotos && roomPhotos.length > 0) {
                    photos = roomPhotos;
                }
            }

            if (photos && photos.length > 0) {
                console.log(
                    `‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${photos.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${room.ID || roomIndex}`,
                );

                try {
                    if (photos.length === 1) {
                        // –ï—Å–ª–∏ –æ–¥–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                        await bot.sendPhoto(chatId, photos[0], {
                            caption: roomInfo,
                            parse_mode: "Markdown",
                            reply_markup:
                                roomsKeyboards.getRoomDetailsKeyboard()
                                    .reply_markup,
                        });
                    } else {
                        // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º media group
                        const mediaGroup = photos.map((photo, index) => ({
                            type: "photo",
                            media: photo,
                            // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫ –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                            caption: index === 0 ? roomInfo : undefined,
                            parse_mode: index === 0 ? "Markdown" : undefined,
                        }));

                        await bot.sendMediaGroup(chatId, mediaGroup);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
                        await utils.safeSendMessage(
                            bot,
                            chatId,
                            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                            {
                                ...roomsKeyboards.getRoomDetailsKeyboard(),
                            },
                        );
                    }
                } catch (error) {
                    console.error(
                        `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã:`,
                        error.message,
                    );

                    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É
                    for (let i = 0; i < photos.length; i++) {
                        const photoUrl = photos[i];
                        try {
                            console.log(
                                `üì∑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ${i + 1}/${photos.length}: ${photoUrl}`,
                            );

                            if (i === 0) {
                                // –ö –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                                await bot.sendPhoto(chatId, photoUrl, {
                                    caption: roomInfo,
                                    parse_mode: "Markdown",
                                });
                            } else {
                                await bot.sendPhoto(chatId, photoUrl);
                            }

                            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                            if (i < photos.length - 1) {
                                await new Promise((resolve) =>
                                    setTimeout(resolve, 500),
                                );
                            }
                        } catch (photoError) {
                            console.error(
                                `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ${photoUrl}:`,
                                photoError.message,
                            );
                            await utils.safeSendMessage(
                                bot,
                                chatId,
                                `üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è: ${photoUrl}`,
                            );
                        }
                    }

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
                    await utils.safeSendMessage(
                        bot,
                        chatId,
                        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        {
                            ...roomsKeyboards.getRoomDetailsKeyboard(),
                        },
                    );
                }
            } else {
                console.log(
                    `‚ö†Ô∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${room.ID || roomIndex} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`,
                );

                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ
                await utils.safeSendMessage(bot, chatId, roomInfo, {
                    parse_mode: "Markdown",
                    ...roomsKeyboards.getRoomDetailsKeyboard(),
                });
            }
        } else {
            console.log(`‚ùå –ù–æ–º–µ—Ä —Å –∏–Ω–¥–µ–∫—Å–æ–º ${roomIndex} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            await utils.safeSendMessage(
                bot,
                chatId,
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–º–µ—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "üîô –ö —Å–ø–∏—Å–∫—É –Ω–æ–º–µ—Ä–æ–≤",
                                    callback_data: "rooms",
                                },
                            ],
                        ],
                    },
                },
            );
        }
    }
};

