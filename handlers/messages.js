const states = require('../states');
const utils = require('../utils');
const services = {
    knowledgeBase: require('../services/knowledgeBase'),
    roomsData: require('../services/roomsData'),
    adminAnswers: require('../services/adminAnswers')
};
const keyboards = require('../keyboards/mainMenu');

module.exports = function setupMessageHandlers(bot, userStates) {
    bot.on('message', async (msg) => {
        if (!msg.text || msg.text.startsWith('/') || msg.text.match(/–º–µ–Ω—é|menu/i)) {
            return;
        }
        
        const chatId = msg.chat.id;
        const userId = msg.from.id;
        const username = msg.from.username;
        const messageText = msg.text.trim();
        
        if (!messageText) return;
        
        const userState = userStates.get(userId) || states.MAIN_MENU;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        if (userState === states.ADMIN_ANSWERING && utils.isAdmin(userId)) {
            const answerData = userStates.get(`${userId}_answer_data`);
            if (answerData) {
                const keywords = messageText.split(',').map(k => k.trim()).filter(k => k);
                
                if (keywords.length > 0) {
                    try {
                        // –ü—Ä–∏–≤–æ–¥–∏–º userId –∫ —Å—Ç—Ä–æ–∫–µ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
                        const targetUserId = answerData.targetUserId.toString();
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
                        await services.adminAnswers.updateAdminAnswer(targetUserId, answerData.answer, keywords);
                        await services.knowledgeBase.saveToKnowledgeBase(keywords, answerData.answer);
                        
                        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                        userStates.delete(`${userId}_answer_data`);
                        userStates.set(userId, states.MAIN_MENU);
                        
                        await utils.safeSendMessage(bot, chatId, `‚úÖ –û—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏: ${keywords.join(', ')}`);
                        
                        // –í–ê–ñ–ù–û: –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
                        return;
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞:', error);
                        await utils.safeSendMessage(bot, chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
                        return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                    }
                } else {
                    await utils.safeSendMessage(bot, chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ');
                    return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
                }
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        if (messageText.toLowerCase().includes('—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä')) {
            userStates.set(userId, states.TRANSFER_REQUEST);
            await utils.safeSendMessage(bot, chatId, `üöñ –ó–∞–∫–∞–∑ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞

–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ:
‚Ä¢ –î–∞—Ç—É –∏ –≤—Ä–µ–º—è
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –û—Ç–∫—É–¥–∞ –∑–∞–±—Ä–∞—Ç—å
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω

–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.`, 
                { parse_mode: 'Markdown' });
            return;
        }
        
        // –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—ã—à–µ)
        const autoAnswer = services.knowledgeBase.findAnswerInKnowledgeBase(messageText);
        
        if (autoAnswer) {
            await utils.safeSendMessage(bot, chatId, autoAnswer, { 
                parse_mode: 'Markdown',
                ...keyboards.getBackToMenuKeyboard()
            });
        } else {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ ADMIN_ANSWERING
            await services.adminAnswers.saveUnknownQuestion(userId, username, messageText);
            
            await utils.safeSendMessage(bot, chatId, `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! ü§î
            
–Ø –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –∏ –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–ê –ø–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–µ–Ω—é —Å –≥–æ—Ç–æ–≤—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏ üëá`, 
                keyboards.getMainMenuKeyboard());
            
            await utils.forwardToAdmins(bot, userId, username, messageText);
        }
    });
};